server:
  port: 8083

spring:
  cloud:
    config:
      enabled: false

  datasource:
    url: jdbc:postgresql://localhost:5432/image_service_db?currentSchema=public
    username: postgres
    password: password
    hikari:
      maximum-pool-size: 10
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  flyway:
    url: jdbc:postgresql://localhost:5432/image_service_db?currentSchema=public
    user: postgres
    password: password
    schemas: public

  jpa:
    hibernate:
      ddl-auto: update

  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB

management:
  endpoints:
    web:
      exposure:
        include:
          - health
          - prometheus
#  metrics:
#    export:
#      prometheus: {}
#    distribution:
#      percentiles-histogram:
#        "[http.server.requests]": true

grpc:
  server:
    port: 50053
  client:
    s3-service:
      address: static://localhost:50054
      enable-keep-alive: true
      keep-alive-without-calls: true
      negotiation-type: plaintext

