syntax = "proto3";

package com.github.fckng0d.userservice;

option java_multiple_files = true;
option java_package = "com.github.fckng0d.grpc.userservice";
option java_outer_classname = "UserServiceProto";

import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";

// Сервис для пользователей
service UserService {
  rpc CreateUser (CreateUserRequest) returns (UserResponse);
  rpc GetUserById (GetUserByIdRequest) returns (UserResponse);
  rpc GetUserByUsername (GetUserByUsernameRequest) returns (UserResponse);
  rpc GetUserByEmail (GetUserByEmailRequest) returns (UserResponse);
//  rpc GetIdByUsername (GetIdByUsernameRequest) returns (UserIdResponse);
//  rpc GetIdByEmail (GetIdByEmailRequest) returns (UserIdResponse);
  rpc UpdateUsername (UpdateUsernameRequest) returns (UserResponse);
  rpc UpdatePasswordHash (UpdatePasswordHashRequest) returns (UserResponse);
  rpc UpdateEmail (UpdateEmailRequest) returns (UserResponse);
  rpc DeleteUserById (DeleteUserByIdRequest) returns (google.protobuf.Empty);
  rpc AssignRole (AssignRoleRequest) returns (UserResponse);
}

message CreateUserRequest {
  string username = 1;
  string email = 2;
  string password_hash = 3;
}

message GetUserByIdRequest {
  string user_id = 1;  // UUID в виде строки
}

message GetUserByUsernameRequest {
  string username = 1;
}

message GetUserByEmailRequest {
  string email = 1;
}

//message GetIdByUsernameRequest {
//  string username = 1;
//}
//
//message GetIdByEmailRequest {
//  string email = 1;
//}
//
//message UserIdResponse {
//  string userId = 1;
//}

message UpdateUsernameRequest {
  string user_id = 1;  // UUID в виде строки
  string new_username = 2;
}

message UpdatePasswordHashRequest {
  string user_id = 1;  // UUID в виде строки
  string password_hash = 2;
}

message UpdateEmailRequest {
  string user_id = 1;  // UUID в виде строки
  string new_email = 2;
}

message DeleteUserByIdRequest {
  string user_id = 1;  // UUID в виде строки
}

message AssignRoleRequest {
  string user_id = 1;
  string role_name = 2;
}

message UserResponse {
  string user_id = 1;  // UUID в виде строки
  string username = 2;
  string email = 3;
  repeated string roles = 4;  // Список ролей
  string passwordHash = 5;
}



service UserProfileService {
  rpc GetUserProfileById (UserProfileByIdRequest) returns (UserProfileResponse);
  rpc AddMusicianProfile(AddMusicianProfileRequest) returns (google.protobuf.Empty);
  rpc UploadImage(UploadImageRequest) returns (google.protobuf.Empty);
  rpc DeleteProfileImage(UserProfileByIdRequest) returns (google.protobuf.Empty);
}

message UserProfileByIdRequest {
  string profile_id = 1; // UUID в виде строки
}

// TODO: также изменить
message AddMusicianProfileRequest {
  string profile_id = 1; // UUID профиля
  string musician_profile_id = 2; // UUID музыкального профиля
}

message UploadImageRequest {
  string profile_id = 1; // UUID профиля
  string fileName = 2;
  bytes imageFileData = 3;
}

message UserProfileResponse {
  string profile_id = 1; // UUID профиля
  string musician_profile_id = 2; // UUID музыкального профиля
  string registration_date = 3;
  int64 image_id = 4;
}



service UserRoleService {
  rpc GetRoleByName (GetRoleByNameRequest) returns (UserRoleResponse);
  rpc CreateRole (CreateRoleRequest) returns (UserRoleResponse);
  rpc GetUsersByRoleName (GetUsersByRoleNameRequest) returns (UsersByRoleNameResponse);
  rpc UpdateUserRole (UpdateUserRoleRequest) returns (google.protobuf.Empty);
  rpc DeleteUserRoleByName (DeleteUserRoleByNameRequest) returns (google.protobuf.Empty);
}

message GetRoleByNameRequest {
  string role_name = 1; // Название роли
}

message CreateRoleRequest {
  string name = 1; // Название роли
  string description = 2; // Описание роли
}

message GetUsersByRoleNameRequest {
  string role_name = 1; // Название роли
}

message UpdateUserRoleRequest {
  string old_name = 1; // Старое имя роли
  string new_name = 2; // Новое имя роли
  string description = 3; // Описание роли
}

message DeleteUserRoleByNameRequest {
  string role_name = 1; // Название роли
}

message UserRoleResponse {
  int32 role_id = 1;
  string name = 2; // Название роли
  string description = 3; // Описание роли
}

message UsersByRoleNameResponse {
  repeated string user_ids = 1;
}